/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package annotation.tool;

import java.io.File;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Alexander
 */
public class GUI extends javax.swing.JFrame {

    private DatabaseConnection dbcon;
    private BestandLezen bestandLezer = new BestandLezen();
    private File bestand;
    private ArrayList<Sequentie> sequenties;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        addPathListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        bestandnaam = new javax.swing.JTextField();
        blader = new javax.swing.JButton();
        Open = new javax.swing.JButton();
        kiesdb = new javax.swing.JButton();
        orfbutton = new javax.swing.JButton();
        visualisatie = new javax.swing.JPanel();
        BLASTparameters = new javax.swing.JLabel();
        blastbutton = new javax.swing.JButton();
        typeblast = new javax.swing.JLabel();
        typeblastcombo = new javax.swing.JComboBox();
        algoritme = new javax.swing.JLabel();
        algoritmecombo = new javax.swing.JComboBox();
        low_complexity = new javax.swing.JCheckBox();
        matrixcombo = new javax.swing.JComboBox();
        matrix = new javax.swing.JLabel();
        mask_lookup = new javax.swing.JCheckBox();
        matchscore = new javax.swing.JLabel();
        mismatchscore = new javax.swing.JLabel();
        gapcostscore = new javax.swing.JLabel();
        match = new javax.swing.JTextField();
        mismatch = new javax.swing.JTextField();
        gap = new javax.swing.JTextField();
        databasetekst = new javax.swing.JLabel();
        compostialadjustmentstekst = new javax.swing.JLabel();
        compadjcombo = new javax.swing.JComboBox();
        exporteerresultaten = new javax.swing.JLabel();
        opslaanals = new javax.swing.JButton();
        typebestand = new javax.swing.JComboBox();
        opslaan = new javax.swing.JButton();
        visualisatietekst = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        host = new javax.swing.JTextField();
        user = new javax.swing.JTextField();
        port = new javax.swing.JTextField();
        verbinding = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();

        jScrollPane1.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bestandnaam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bestandnaamActionPerformed(evt);
            }
        });

        blader.setText("Blader...");
        blader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bladerActionPerformed(evt);
            }
        });

        Open.setText("Open");
        Open.setEnabled(false);
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });

        kiesdb.setText("Upload naar Database");
        kiesdb.setEnabled(false);
        kiesdb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kiesdbActionPerformed(evt);
            }
        });

        orfbutton.setText("Voorspel ORF's");
        orfbutton.setEnabled(false);
        orfbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orfbuttonActionPerformed(evt);
            }
        });

        visualisatie.setBackground(new java.awt.Color(255, 255, 255));
        visualisatie.setEnabled(false);

        javax.swing.GroupLayout visualisatieLayout = new javax.swing.GroupLayout(visualisatie);
        visualisatie.setLayout(visualisatieLayout);
        visualisatieLayout.setHorizontalGroup(
            visualisatieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        visualisatieLayout.setVerticalGroup(
            visualisatieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 188, Short.MAX_VALUE)
        );

        BLASTparameters.setText("BLAST parameters:");
        BLASTparameters.setEnabled(false);

        blastbutton.setText("BLAST");
        blastbutton.setEnabled(false);
        blastbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blastbuttonActionPerformed(evt);
            }
        });

        typeblast.setText("Type BLAST:");
        typeblast.setEnabled(false);

        typeblastcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "blastn"}));
        typeblastcombo.setEnabled(false);
        typeblastcombo.setName(""); // NOI18N

        algoritme.setText("Algoritme:");
        algoritme.setEnabled(false);

        algoritmecombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Standaard"}));
        algoritmecombo.setEnabled(false);
        algoritmecombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algoritmecomboActionPerformed(evt);
            }
        });

        low_complexity.setText("Low Complexity");
        low_complexity.setEnabled(false);

        matrixcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Standaard"}));
        matrixcombo.setEnabled(false);

        matrix.setText("Matrix:");
        matrix.setEnabled(false);

        mask_lookup.setText("Mask Lookup");
        mask_lookup.setEnabled(false);

        matchscore.setText("Match score:");
        matchscore.setEnabled(false);

        mismatchscore.setText("Mismatch score:");
        mismatchscore.setEnabled(false);

        gapcostscore.setText("Gap costs:");
        gapcostscore.setEnabled(false);

        match.setEnabled(false);

        mismatch.setEnabled(false);

        gap.setEnabled(false);

        databasetekst.setText("Database:");
        databasetekst.setEnabled(false);

        compostialadjustmentstekst.setText("Compositial adjustments:");
        compostialadjustmentstekst.setEnabled(false);

        compadjcombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Standaard" }));
        compadjcombo.setEnabled(false);

        exporteerresultaten.setText("Exporteer resultaten: ");
        exporteerresultaten.setEnabled(false);

        opslaanals.setText("Opslaan als...");
        opslaanals.setEnabled(false);
        opslaanals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opslaanalsActionPerformed(evt);
            }
        });

        typebestand.setModel(new javax.swing.DefaultComboBoxModel(new String[] { ".FASTA", ".txt" }));
        typebestand.setEnabled(false);

        opslaan.setText("Opslaan");
        opslaan.setEnabled(false);

        visualisatietekst.setText("Visualisatie:");
        visualisatietekst.setEnabled(false);

        jLabel1.setText("Host");
        jLabel1.setEnabled(false);

        jLabel2.setText("Username:");
        jLabel2.setEnabled(false);

        jLabel3.setText("Password:");
        jLabel3.setEnabled(false);

        jLabel4.setText("Port:");
        jLabel4.setEnabled(false);

        host.setText("cytosine.nl");
        host.setEnabled(false);

        user.setText("owe7_pg6");
        user.setEnabled(false);
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });

        port.setText("1521");
        port.setToolTipText("");
        port.setEnabled(false);

        verbinding.setText("Check verbinding");
        verbinding.setEnabled(false);
        verbinding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verbindingActionPerformed(evt);
            }
        });

        password.setText("blaat1234");
        password.setEnabled(false);
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bestandnaam, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(blader, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Open, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(orfbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(visualisatie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(low_complexity)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(compadjcombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BLASTparameters, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(typeblast)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(typeblastcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(algoritme)
                                        .addComponent(matrix))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(algoritmecombo, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(matrixcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(compostialadjustmentstekst, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(matchscore)
                                        .addComponent(match, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mismatchscore)
                                        .addComponent(mismatch, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(blastbutton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(gap, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(gapcostscore))))
                            .addComponent(mask_lookup)
                            .addComponent(visualisatietekst))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typebestand, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 171, Short.MAX_VALUE)
                                .addComponent(opslaan, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(opslaanals))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(exporteerresultaten)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(databasetekst))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(verbinding, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(kiesdb))
                                    .addComponent(host)
                                    .addComponent(user)
                                    .addComponent(port)
                                    .addComponent(password))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bestandnaam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blader)
                    .addComponent(Open))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orfbutton)
                .addGap(5, 5, 5)
                .addComponent(visualisatietekst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visualisatie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exporteerresultaten)
                    .addComponent(BLASTparameters))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeblast, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeblastcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typebestand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algoritme)
                    .addComponent(algoritmecombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opslaanals)
                    .addComponent(opslaan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(matrixcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matrix))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(databasetekst)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(compostialadjustmentstekst)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(compadjcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(low_complexity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mask_lookup)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(matchscore)
                            .addComponent(mismatchscore)
                            .addComponent(gapcostscore))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(match, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mismatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(host, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kiesdb)
                            .addComponent(verbinding))))
                .addGap(18, 18, 18)
                .addComponent(blastbutton)
                .addGap(0, 34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bladerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bladerActionPerformed
        String path = bestandLezer.bladerActionPerformed(evt, this);
        bestandnaam.setText(path);
    }//GEN-LAST:event_bladerActionPerformed

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
        String path = bestandnaam.getText();
        if (path != null | path != "") {
            sequenties = bestandLezer.FileReader(path);
            if (sequenties != null) {
                File bestand = new File(path);
                orfbutton.setEnabled(true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Er is geen pad opgegeven naar het bestand!");
        }
    }//GEN-LAST:event_OpenActionPerformed

    private void orfbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orfbuttonActionPerformed
        enableDatabase();
    }//GEN-LAST:event_orfbuttonActionPerformed

    private void kiesdbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kiesdbActionPerformed
        try {
            int bestandID = hashSHA256(bestand.getName());
            dbcon.addBestand(bestandID, bestand.getName(), ".fasta");
            for (Sequentie sequentie : sequenties) {
                dbcon.addSequentie(hashSHA256(sequentie.getSequentie()), "DNA", sequentie.getSequentie(), bestandID);
            }
            JOptionPane.showMessageDialog(null, "De data is succesvol naar de database geupload!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Er was een probleem bij het uploaden van de data naar de database:\n" + e.getMessage(), "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_kiesdbActionPerformed

    private void blastbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blastbuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blastbuttonActionPerformed

    private void opslaanalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opslaanalsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opslaanalsActionPerformed

    private void verbindingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verbindingActionPerformed
        // TODO add your handling code here:
        String Host = host.getText();
        String Username = user.getText();
        String Password = password.getText();
        int Port = 1521;
        try {
            Port = Integer.parseInt(port.getText());
            dbcon = new DatabaseConnection(Host, Username, Password, Port);
            if (DatabaseConnection.checkJDBCDriver() == true) {
                if (dbcon.testConnection() == true) {
                    JOptionPane.showMessageDialog(null, String.format("Er was succesvol verbinding gemaakt met: '%s'", Host));
                    kiesdb.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Er kon geen connectie gemaakt worden met de database.");

                }
            } else {
                JOptionPane.showMessageDialog(null, "JDBC is niet (goed) geïnstalleerd.");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "De port bevat geen getal");
        }
    }//GEN-LAST:event_verbindingActionPerformed

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userActionPerformed

    private void algoritmecomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algoritmecomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_algoritmecomboActionPerformed

    private void bestandnaamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bestandnaamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bestandnaamActionPerformed

    private void addPathListener() {
        bestandnaam.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                checkTextField();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkTextField();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                checkTextField();
            }

            public void checkTextField() {
                if (bestandnaam.getText().equals("")) {
                    Open.setEnabled(false);
                } else {
                    Open.setEnabled(true);
                }
            }
        });
    }

    private int hashSHA256(String in) {
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-256");
            byte[] stringData = in.getBytes();
            byte[] hash = digest.digest(stringData);
            return (hash[0] << 24) & 0xff000000
                    | (hash[1] << 16) & 0x00ff0000
                    | (hash[2] << 8) & 0x0000ff00
                    | (hash[3]) & 0x000000ff;
        } catch (NoSuchAlgorithmException e) {
            return -1;
        }
    }

    private void enableDatabase() {
        databasetekst.setEnabled(true);
        jLabel1.setEnabled(true);
        jLabel2.setEnabled(true);
        jLabel3.setEnabled(true);
        jLabel4.setEnabled(true);
        host.setEnabled(true);
        user.setEnabled(true);
        password.setEnabled(true);
        port.setEnabled(true);
        verbinding.setEnabled(true);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BLASTparameters;
    private javax.swing.JButton Open;
    private javax.swing.JLabel algoritme;
    private javax.swing.JComboBox algoritmecombo;
    private javax.swing.JTextField bestandnaam;
    private javax.swing.JButton blader;
    private javax.swing.JButton blastbutton;
    private javax.swing.JComboBox compadjcombo;
    private javax.swing.JLabel compostialadjustmentstekst;
    private javax.swing.JLabel databasetekst;
    private javax.swing.JLabel exporteerresultaten;
    private javax.swing.JTextField gap;
    private javax.swing.JLabel gapcostscore;
    private javax.swing.JTextField host;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JButton kiesdb;
    private javax.swing.JCheckBox low_complexity;
    private javax.swing.JCheckBox mask_lookup;
    private javax.swing.JTextField match;
    private javax.swing.JLabel matchscore;
    private javax.swing.JLabel matrix;
    private javax.swing.JComboBox matrixcombo;
    private javax.swing.JTextField mismatch;
    private javax.swing.JLabel mismatchscore;
    private javax.swing.JButton opslaan;
    private javax.swing.JButton opslaanals;
    private javax.swing.JButton orfbutton;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField port;
    private javax.swing.JComboBox typebestand;
    private javax.swing.JLabel typeblast;
    private javax.swing.JComboBox typeblastcombo;
    private javax.swing.JTextField user;
    private javax.swing.JButton verbinding;
    private javax.swing.JPanel visualisatie;
    private javax.swing.JLabel visualisatietekst;
    // End of variables declaration//GEN-END:variables
}
